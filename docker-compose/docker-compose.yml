version: "3.9"

services:
  adempiere.db:
    build:
      context: postgresql/
      dockerfile: Dockerfile
    container_name: ${POSTGRES_NAME}
    restart: ${GENERIC_RESTART}
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5432; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - adempiere_network
            
  adempiere-middleware:
    image: openls/adempiere-middleware:alpine-rs-1.1.9
    container_name: ${MIDDLEWARE_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - 50059
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/50059; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      DB_HOST: ${POSTGRES_NAME}
      SERVER_PRIVATE_KEY: ${SERVER_PRIVATE_KEY}
    depends_on:
      adempiere.db:
        condition: service_healthy
    networks:
      - adempiere_network
  
  adempiere-backend-rs:
    image: openls/adempiere-backend-rs:rs-1.0.9
    restart: ${GENERIC_RESTART}
    ports:
      - 7878:7878
    environment:
      MIDDLEWARE_HOST: http://${MIDDLEWARE_HOST}:50059
    depends_on:
      adempiere-middleware:
        condition: service_healthy
    networks:
      - adempiere_network
      
networks:
  adempiere_network:
    name: ${ADEMPIERE_NETWORK}
    
volumes:
  volume_postgres:
    name: ${POSTGRES_NETWORK}